package edu.gmu.teemw;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Scanner;
import java.util.Set;

import javax.swing.JFrame;

import edu.gmu.teemw.database.Database;
import edu.gmu.teemw.database.User;
import edu.gmu.teemw.database.quiz.Question;
import edu.gmu.teemw.database.quiz.QuestionCode;
import edu.gmu.teemw.database.quiz.QuestionMultipleChoice;
import edu.gmu.teemw.database.quiz.Quiz;
import edu.gmu.teemw.ui.GradeFrame;

public class SystemMain {
	public static User currentUser;
	public static Quiz currentQuiz;

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);

		System.out.println("Username: ");
		String username = scanner.nextLine();

		System.out.println("Password: ");
		String password = scanner.nextLine();

		Database database = Database.getDatabaseInstance();
		currentUser = database.getUser(username, password);
		if (currentUser != null) {
			System.out.println("Login confirmed!");
			System.out.println("Welcome back " + currentUser.getName() + "!");
		} else {
			System.err.println("Wrong password!");
			System.exit(0);
		}

		while (true) {
			System.out.println("1. Take quiz\n2. Create question\n3. View grades");
			String option = scanner.nextLine();
			switch (option) {
			case "1":
				takeQuiz();
				break;
			case "2":
				createQuestion();
				break;
			}
			if (option.equals("q")) break;
		}

		scanner.close();
	}

	public static void createQuestion() {
		System.out.println("What type of question?\n1. Code\n2. Multiple Choice\n3. Short Answer");
		Scanner scan = new Scanner(System.in);
		int type = scan.nextInt();
		scan.nextLine();
		System.out.println("Question text: ");
		String question = scan.nextLine();
		String input = null;
		if (type == 1) {
			System.out.println("Input:");
			input = scan.nextLine();
		} else if (type == 2) {
			System.out.println("Choice ('q' if done):");
			input = scan.nextLine();

		} else if (type == 3) {
		}
		System.out.println("Answer:");
		String answer = scan.nextLine();
		Question q = null;
		if (type == 1) {
			q = new QuestionCode(0, question, input, answer);
		} else if (type == 2) {
			int numChoices = 0;
			Set<String> choices = new HashSet<>();
			while (true) {
				System.out.println("Choice " + (numChoices + 1) + " ('q' to quit): ");
				String choice = scan.nextLine();
				if (choice.equals("q")) break;
				choices.add(choice);
			}
			q = new QuestionMultipleChoice(0, question, choices, answer);
			//TODO FINISH THIS q = new QuestionMultipleChoice(0, question, input, answer);
		} else if (type == 3) {
			q = new QuestionCode(0, question, input, answer);
		}

		Quiz addQuiz = null;

		while (addQuiz == null) {
			System.out.println("Which quiz to add it to?");
			// SELECT QUIZ NUM
			Set<Quiz> quizzes = Database.getDatabaseInstance().getQuizzes();
			List<String> display = new ArrayList<>();
			for (Quiz quiz : quizzes) {
				display.add(quiz.toString());
			}
			Collections.sort(display);

			for (String s : display) System.out.println(s);
			System.out.println("Use \"-1\" to make a new quiz.");

			int quiz = scan.nextInt();
			scan.nextLine();
			if (quiz == -1) {
				System.out.println("Quiz name: ");
				String name = scan.nextLine();
				quiz = Database.getDatabaseInstance().addQuiz(name);
			}
			addQuiz = Database.getDatabaseInstance().getQuiz(quiz); 
		}

		//TODO
		Database.getDatabaseInstance().addQuestion(q, addQuiz);
	}

	public static void takeQuiz() {
		Database database = Database.getDatabaseInstance();

		Set<Quiz> quizzes = database.getQuizzes();
		List<String> display = new ArrayList<>();
		for (Quiz quiz : quizzes) {
			display.add(quiz.toString());
		}
		Collections.sort(display);

		for (String s : display) System.out.println(s);
		Scanner scan = new Scanner(System.in);
		int quizID = scan.nextInt();
		scan.nextLine();

		Set<Question> questions = database.getQuestions(quizID);
		int score = 0;
		for (Question question : questions) {
			boolean correct = false;
			String answer = "";
			System.out.println(question.getQuestionText());
			if (question.getQuestionType().equals(Question.TYPE.MultipleChoice)) {
				QuestionMultipleChoice mc = (QuestionMultipleChoice) question;
				List<String> choices = mc.getChoices();
				for (int i = 1; i <= choices.size(); i++) {
					System.out.println(i + ". " + choices.get(i - 1));
				}
				System.out.println("Choice? ");
				int choice = scan.nextInt();
				answer = choices.get(choice);
			} else {
				answer = scan.nextLine();
			}
			correct = question.validateAnswer(answer);
			if (correct) {
				score++;
				System.out.println("Correct!");
			} else {
				System.out.println("Incorrect!");
			}
		}

		System.out.println("Score: " + score);
		scan.close();
	}
}
